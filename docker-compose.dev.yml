version: '3'
services:
  redis:
    container_name: sce-redis-dev
    image: redis:latest
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - sce_redis_data_dev:/data/redis
  mongodb:
    container_name: sce-mongodb-dev
    restart: always
    image: 'mongo'
    ports:
      - '27017:27017'
    volumes:
      - sce_mongodb_data_dev:/data/db
    command: 'mongod --quiet --logpath /dev/null'
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
  sce-cloud-api:
    container_name: sce-cloud-api-dev
    image: cloudapi:latest
    build:
      context: ./api
      dockerfile: ./cloud_api/Dockerfile.dev
    environment:
      - GENERAL_API_URL=http://sce-main-endpoints-dev:8080/api
      - VERIFICATION_BASE_URL=http://localhost
      - DATABASE_HOST=sce-mongodb-dev
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    ports:
        - '8082:8082'
    restart: 'on-failure'
    stdin_open: true
    links:
      - mongodb
    depends_on:
      - mongodb
    volumes:
      - ./api/config:/app/config
      - ./api/package.json:/app/package.json
      - ./api/util:/app/util/
      - ./api/cloud_api:/app/cloud_api
  main-endpoints:
    container_name: sce-main-endpoints-dev
    build:
      context: ./api
      dockerfile: ./main_endpoints/Dockerfile.dev
    environment:
      - MAIN_ENDPOINT_URL=sce-main-endpoints-dev:8080
      - CLEEZY_URL=http://host.docker.internal:8000
      - PRINTER_URL=http://host.docker.internal:14000
      - LED_SIGN_URL=http://host.docker.internal:11000
      - DISCORD_REDIRECT_URI=http://localhost/api/user/callback
      - MAILER_API_URL=http://sce-cloud-api-dev:8082/cloudapi
      - DATABASE_HOST=sce-mongodb-dev
      - REDIS_HOST_URL=redis://sce-redis-dev:6379
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    ports:
      - '8080:8080'
    restart: 'on-failure'
    stdin_open: true
    links:
      - mongodb
      - redis
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./api/config:/app/config
      - ./api/package.json:/app/package.json
      - ./api/util:/app/util/
      - ./api/main_endpoints:/app/main_endpoints

  frontend:
    container_name: sce-frontend-dev
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    environment:
      - NODE_ENV=dev
      - REACT_APP_BASE_API_URL=http://localhost
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}

    ports:
      - '3000:3000'
    restart: 'on-failure'
    stdin_open: true
    links:
      - mongodb
    depends_on:
      - mongodb
    volumes:
      - ./package.json:/frontend/package.json
      - ./src:/frontend/src/
      - ./public:/frontend/public/
  
  nginx:
    container_name: sce-nginx-dev
    image: 'nginx'
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - '80:80'
    restart: 'on-failure'
    depends_on:
      - frontend
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}

volumes:
  sce_mongodb_data_dev:
  sce_redis_data_dev:
